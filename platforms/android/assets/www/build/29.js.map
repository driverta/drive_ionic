{"version":3,"sources":["../../src/pages/edit-profile/edit-profile.module.ts","../../src/pages/edit-profile/edit-profile.ts"],"names":[],"mappings":"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","file":"29.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EditProfilePage } from './edit-profile';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    EditProfilePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EditProfilePage),\n    TranslateModule.forChild()\n  ],\n})\nexport class EditProfilePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/edit-profile/edit-profile.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IonicPage, NavController, ViewController, NavParams, AlertController } from 'ionic-angular';\nimport { CustomRecordsPage } from '../custom-records/custom-records';\nimport { Storage } from '@ionic/storage';\nimport { ProvidersUserProvider } from '../../providers/providers-user/providers-user';\n\n\nimport firebase from 'firebase';\n\n@IonicPage()\n@Component({\n  selector: 'page-edit-profile',\n  templateUrl: 'edit-profile.html',\n})\nexport class EditProfilePage {\n\n  isReadyToSave: boolean;\n\n  item: any;\n  loop = 0;\n  show = false;\n  lifts = {};\n  setlifts = {};\n  gains = {};\n  myrecords: any;\n  users = [];\n  username = \"test\";\n  info: { username: any, weight: number, height: number, gym: string, location: string} = { username: this.username, weight: null, height: null, gym: \"\", location: \"\"};\n  bool = true;\n  edit = false;\n  data: any;\n  competitorsList = [];\n  competingList = [];\n  userData: any;\n\n  form: FormGroup;\n\n  constructor(\n    public navCtrl: NavController,\n    public viewCtrl: ViewController, \n    formBuilder: FormBuilder,\n    navParams: NavParams,\n    public alertCtrl: AlertController,\n    private storage: Storage,\n    private userService: ProvidersUserProvider) {\n\n    this.userData = this.userService.getUser();\n\n    this.form = formBuilder.group({\n      username: [''],\n      weight: [''],\n      height: [''],\n      gym: [''],\n      location: ['']\n    });\n\n    // Watch the form for changes, and\n    this.form.valueChanges.subscribe((v) => {\n      this.isReadyToSave = this.form.valid;\n    });\n\n    //this.myrecords = navParams.get('records') || records._records;\n  }\n\n  ionViewWillEnter() {\n    this.viewCtrl.showBackButton(false);\n  }\n\n  ionViewDidLoad() {\n    // this.username = localStorage.getItem(\"username\");\n    // this.info.username = this.username;\n    // console.log(this.username);\n  }\n\n  /**\n   * The user cancelled, so we dismiss without sending data back.\n   */\n  cancel() {\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * The user is done and wants to create the item, so return it\n   * back to the presenter.\n   */\n  done() {\n    if (!this.form.valid) { return; }\n    this.viewCtrl.dismiss(this.form.value);\n  }\n\n  /*\n  checkUsername(){\n    console.log(this.info.username)\n    if(this.info.username != this.username){\n      this.show = true\n      var query1 = firebase.database().ref('/users');\n      query1.once(\"value\").then( snapshot => {\n        this.loop = 0;\n        snapshot.forEach( childSnapshot => {\n          var childData1 = childSnapshot.val();\n          this.loop++\n          if ( this.info.username == childData1.name ) {\n            this.show = false;\n            this.repeatUsername()\n            return;\n          } \n          if ( snapshot.numChildren() == this.loop && this.show == true) {\n            this.changeData();\n          }\n        });\n      });\n    } else {\n      this.changeData();\n    }\n  }\n  */\n  changeData(){\n    /*\n    if(this.info.username != this.username){\n      \n      localStorage.setItem(\"username\",this.info.username)\n\n      var user = firebase.database().ref('/users/' + this.username);\n      user.once(\"value\").then( snapshot => {\n        var newUser = snapshot.val();\n        var user = firebase.database().ref('/users' + this.info.username);\n        user.set(newUser);\n      })\n\n      this.getUsers().then((val) => {\n        this.users = val;\n        this.users.push(this.username);\n        this.storage.set('/users', this.users);\n      })\n\n      this.getExercises().then((val) => {\n        this.lifts = val;\n        this.storage.set(this.info.username + '/exercises', this.lifts)\n        var exercises = firebase.database().ref(this.info.username + '/exercises');\n        exercises.set(this.lifts);\n      })\n\n      this.getGains().then((val) => {\n        this.gains = val;\n        this.storage.set(this.info.username + '/gains', this.gains)\n        var gains  = firebase.database().ref(this.info.username + '/gains');\n        gains.set(this.gains);\n      })\n\n      var queryCompeting = firebase.database().ref('/' + this.username + '/competing');\n      queryCompeting.once(\"value\").then( snapshot => {\n        var newList = snapshot.val();\n        var competing = firebase.database().ref('/' + this.info.username + '/competing');\n        competing.set(newList);\n        snapshot.forEach( childSnapshot => {\n          var childData1 = childSnapshot.val();\n          var thisUser = childData1.name\n          console.log(thisUser + \"USER\");\n          var thisUsersCompetitors = firebase.database().ref('/' + thisUser + '/competitors');\n          thisUsersCompetitors.once(\"value\").then( snapshot2 => {\n            this.competitorsList = [];\n            snapshot2.forEach( childSnapshot2 => {\n              var childData2 = childSnapshot2.val();\n              console.log(childData2);\n              if (childData2 != this.username){\n                this.competitorsList.push(childData2) \n              }\n            })\n          }).then(() => {\n            this.competitorsList.push(this.info.username)\n            thisUsersCompetitors.set(this.competitorsList)\n          })\n        })\n      })\n\n      \n      var queryCompetitors = firebase.database().ref('/' + this.username + '/competitors');\n      queryCompetitors.once(\"value\").then( snapshot => {\n        var newList = snapshot.val();\n        var competitors = firebase.database().ref('/' + this.info.username + '/competitors');\n        competitors.set(newList);\n        snapshot.forEach( childSnapshot => {\n          var childData1 = childSnapshot.val();\n          var thisUser = childData1.name\n\n          var thisUsersCompeting = firebase.database().ref('/' + thisUser + '/competing');\n          thisUsersCompeting.once(\"value\").then( snapshot2 => {\n            this.competingList = [];\n            snapshot2.forEach( childSnapshot2 => {\n              var childData2 = childSnapshot2.val();\n              //console.log(childData2);\n              if (childData2 != this.username){\n                this.competingList.push(childData2) \n              }\n            })\n          }).then(() => {\n            this.competingList.push(this.info.username)\n            thisUsersCompeting.set(this.competitorsList)\n          })\n        })\n      })\n\n      var queryPic = firebase.database().ref('/users/' + this.username + '/profilePic');\n      queryPic.once(\"value\").then( snapshot => {\n        var pic = snapshot.val();\n        var profilePic = firebase.database().ref('/users/' + this.info.username + '/profilePic');\n        profilePic.set(pic);\n      })\n      \n    }\n    */\n\n    this.userData.weight = this.info.weight;\n    this.userData.height = this.info.height;\n    this.userData.gym = this.info.gym;\n    this.userData.location = this.info.location;\n    this.userService.createUser(this.userData).subscribe(response => console.log(response));\n\n  \t// var weight = firebase.database().ref('/users/' + this.info.username + '/weight');\n  \t// weight.set(this.info.weight);\n\n  \t// var height = firebase.database().ref('/users/' + this.info.username + '/height');\n  \t// height.set(this.info.height);\n\n  \t// var gym = firebase.database().ref('/users/' + this.info.username + '/gym');\n  \t// gym.set(this.info.gym);\n\n  \t// var location = firebase.database().ref('/users/' + this.info.username + '/location');\n  \t// location.set(this.info.location);\n\n  \tthis.done();\n  }\n\n  getUsers(): Promise<any> {\n    return this.storage.get('/users');\n  }\n\n  getExercises(): Promise<any> {\n    return this.storage.get(this.username + '/exercises');\n  }\n\n  getGains(): Promise<any> {\n    return this.storage.get(this.username + '/gains');\n  }\n\n  repeatUsername(){\n    let alert = this.alertCtrl.create({\n      title: \"Someone is already using this username.\",\n      buttons: ['Ok']\n    });\n    alert.present(); \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/edit-profile/edit-profile.ts"],"sourceRoot":""}